// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PartnerApplication {
  id              String   @id @default(uuid())
  businessName    String
  contactPerson   String
  email           String
  phone           String
  website         String?
  address         String
  businessType    String
  servicesOffered String[]
  yearsInBusiness String
  employeeCount   String
  annualRevenue   String
  certifications  String[]
  status          String   @default("Pending")
  submittedAt     DateTime @default(now())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  documents       String[]
}

model ClientInformation {
  id               String   @id @default(uuid())
  clientName       String
  contactPerson    String
  email            String
  phone            String
  address          String
  businessType     String
  taxId            String
  fiscalYearEnd    String
  accountingMethod String
  industry         String
  referredBy       String?
  status           String   @default("Pending")
  submittedAt      DateTime @default(now())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  documents        String[]
}

model TaxFiling {
  id           String   @id @default(uuid())
  clientName   String
  taxYear      String
  filingType   String
  taxId        String
  filingStatus String
  dependents   Int      @default(0)
  income       Float
  deductions   Float
  credits      Float
  status       String   @default("Draft")
  amount       Float
  submittedAt  DateTime @default(now())
  dueDate      DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      String
  status    String   @default("Pending")
  lastLogin DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  payments  Payment[]
  accounts  Account[] // Add this line
  sessions  Session[] // Add this line
}

// NextAuth models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Payment {
  id            String   @id @default(uuid())
  userId        String
  amount        Float
  date          DateTime
  description   String
  status        String
  paymentMethod String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])
}
